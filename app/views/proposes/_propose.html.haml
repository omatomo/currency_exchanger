-# .propose_content
-#   .username
-#     = link_to propose.user.name, user_path(propose.user)
-#   .userphoto
-#     - if propose.user.image.url
-#       = link_to (image_tag propose.user.image.thumb, :class => "user_image"), user_path(propose.user)
-#     - else
-#       = link_to (image_tag 'RS=^ADBhf8bg8a_DFSi.jpg', :size => "50x50", :class => "user_image"), user_path(propose.user)


-#   .havecurrency
-#     = propose.amount
-#     = propose.have_currency.currency
-#   .have_image
-#     = image_tag propose.have_currency.image, :size => "17x17"
-#   .wantcurrency
-#     = propose.want_currency.currency
-#   .want_image
-#     = image_tag propose.want_currency.image, :size => "17x17"
-#   .likes
-#     = render 'likes/like', propose: propose
-#   -# .propose_detail
-#   -#   - pinpoint = RequestMatch.find_by(propose_id: propose.id)
-#   -#   - if !pinpoint.nil? && pinpoint.negotiated == true
-#   -#     マッチング済みです。
-#   -#   - else
-#   -#     = button_to "詳細を見る", propose_path(propose), method: :get
-#   - if !current_user.nil? && current_user.id == propose.user_id
-#     .propose_handle
-#       = link_to "編集", edit_propose_path(propose)
-#       = link_to "削除", propose_path(propose), method: :delete
-#   - else
-#     - request = RequestMatch.find_by(propose_id: propose.id)
-#     - if logged_in?
-#       - if request.nil?
-#         = form_for(current_user.request_creates.build) do |f|
-#           = hidden_field_tag :post_user_id, propose.user_id
-#           = hidden_field_tag :propose_id, propose.id
-#           = f.submit "リクエストを送信する"
-#       - elsif !request.nil?
-#         - if request.request_user_id == current_user.id
-#           = form_for(current_user.request_creates.find_by(propose_id: propose.id), method: :delete) do |f|
-#             = hidden_field_tag :propose_id, propose.id
-#             = hidden_field_tag :post_user_id, propose.user_id
-#             = f.submit "リクエストをキャンセルする。"
-#         - else
-#           キャンセルをお待ちください。
-#     - else
-#       = button_to "リクエストを送信する。", request_matches_path

-#   -# #自分の投稿か他人の投稿かによって分岐させる。
-#   .request_condition
-#   - request_match = RequestMatch.find_by(propose_id: propose.id)
-#   - if request_match && request_match.negotiated == true
-#   - elsif request_match && request_match.negotiated == false
-#     リクエスト送信済み
-#     -# - requestman = RequestMatch.find_by(post_user_id:)
-#     -# - room = Room.find_by(requestman_id: )
-#     -# = link_to "メッセージを送る", room_path
-#   - else
-#     リクエスト待ち
.card.cardcard{:style => "width: 35rem;"}
  .cardcardcard
    .card-block
      %span.proposeuserphoto
        - if propose.user.image.url
          = image_tag propose.user.image.thumb, :size => "35x35", :class => "userimageuser"
        - else
          = image_tag 'RS=^ADBhf8bg8a_DFSi.jpg', :size => "35x35", :class => "userimageuser"
      %h4.card-title
        = link_to propose.user.name, user_path(propose.user)
      - if !current_user.nil? && current_user.id == propose.user_id
        %span.propose_handle
          = link_to "編集", edit_propose_path(propose)
          = link_to "削除", propose_path(propose), method: :delete
      - elsif !current_user.nil? && current_user.id != propose.user_id
        %span.propose_handle.likeunlike
          = render 'likes/like', propose: propose

    %hr
      .text
        .have
          %span.have_image
            = image_tag propose.have_currency.image, :size => "38x28"
          %span.amount
            = propose.amount
          %span.have_country
            = propose.have_currency.currency + "所持中"
        .arrow_icon
          %i.fa.fa-arrow-down.fa-3x{"aria-hidden" => "true"}
        %span.want_image
          = image_tag propose.want_currency.image, :size => "60x45"
        %span.wantcurrency
          = propose.want_currency.currency + "求む"
    %ul.list-group.list-group-flush
      %li.list-group-item
        -if !propose.gotime.blank?
          %span.airtime
            空港利用日時　　
          = propose.gotime
          頃
        - else
          %span.airtime
            空港利用日時　　
          指定なし
      %li.list-group-item
        -if !propose.airport.nil?
          %span.airport
            利用する空港　　
          = propose.airport.airport
        - else
          %span.airport
            利用する空港　　
          指定なし
      - if !current_user.nil? && current_user.id == propose.user_id
        -# - request = RequestMatch.find_by(propose_id: propose.id)
        - room = Room.find_by(propose_id: propose.id)
        - if !room.nil?
          .btn
            %i.fa.fa-envelope-o{"aria-hidden" => "true"}
            = link_to "メッセージを送る。", room_path(room)
      - else
        - request = RequestMatch.find_by(propose_id: propose.id)
        - if logged_in?
          - if request.nil?
            = form_for(current_user.request_creates.build) do |f|
              = hidden_field_tag :post_user_id, propose.user_id
              = hidden_field_tag :propose_id, propose.id
              .send_request
                = f.submit "リクエストを送信する"
          - elsif !request.nil?
            - if request.request_user_id == current_user.id
              - room = Room.find_by(propose_id: propose.id)
              .btn
                %i.fa.fa-envelope-o{"aria-hidden" => "true"}
                = link_to "メッセージを送る。", room_path(room)
              = form_for(current_user.request_creates.find_by(propose_id: propose.id), method: :delete) do |f|
                = hidden_field_tag :propose_id, propose.id
                = hidden_field_tag :post_user_id, propose.user_id
                .send_request.request_cancel
                  = f.submit "リクエストをキャンセルする。"
            - else
              キャンセルをお待ちください。
        - else
          .send_request.button.button--default.button--default--min
            = button_to "リクエストを送信する。", request_matches_path


    -# .card-block
    -#   = render 'likes/like', propose: propose

